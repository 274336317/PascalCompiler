/*
* generated by Xtext
*/
parser grammar InternalPascalParser;

options {
	tokenVocab=InternalPascalLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package org.xtext.example.pascal.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.pascal.services.PascalGrammarAccess;

}

@members {
 
 	private PascalGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("CircumflexAccent", "'^'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("ColonEqualsSign", "':='");
		tokenNameToValue.put("Program", "'program'");
 	}
 	
    public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRulepascal
entryRulepascal 
:
{ before(grammarAccess.getPascalRule()); }
	 rulepascal
{ after(grammarAccess.getPascalRule()); } 
	 EOF 
;

// Rule pascal
rulepascal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPascalAccess().getProgramAssignment()); }
(rule__Pascal__ProgramAssignment)
{ after(grammarAccess.getPascalAccess().getProgramAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprogram
entryRuleprogram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleprogram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule program
ruleprogram 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprogram_heading_block
entryRuleprogram_heading_block 
:
{ before(grammarAccess.getProgram_heading_blockRule()); }
	 ruleprogram_heading_block
{ after(grammarAccess.getProgram_heading_blockRule()); } 
	 EOF 
;

// Rule program_heading_block
ruleprogram_heading_block 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
(rule__Program_heading_block__Group__0)
{ after(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleidentifier_list
entryRuleidentifier_list 
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
(rule__Identifier_list__Group__0)
{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleblock
entryRuleblock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement_part
entryRulestatement_part 
:
{ before(grammarAccess.getStatement_partRule()); }
	 rulestatement_part
{ after(grammarAccess.getStatement_partRule()); } 
	 EOF 
;

// Rule statement_part
rulestatement_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStatement_partAccess().getGroup()); }
(rule__Statement_part__Group__0)
{ after(grammarAccess.getStatement_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement_sequence
entryRulestatement_sequence 
:
{ before(grammarAccess.getStatement_sequenceRule()); }
	 rulestatement_sequence
{ after(grammarAccess.getStatement_sequenceRule()); } 
	 EOF 
;

// Rule statement_sequence
rulestatement_sequence 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStatement_sequenceAccess().getGroup()); }
(rule__Statement_sequence__Group__0)
{ after(grammarAccess.getStatement_sequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestatement
entryRulestatement 
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabel
entryRulelabel 
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLabelAccess().getAlternatives()); }
(rule__Label__Alternatives)
{ after(grammarAccess.getLabelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_statement
entryRulesimple_statement 
:
{ before(grammarAccess.getSimple_statementRule()); }
	 rulesimple_statement
{ after(grammarAccess.getSimple_statementRule()); } 
	 EOF 
;

// Rule simple_statement
rulesimple_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimple_statementAccess().getAlternatives()); }
(rule__Simple_statement__Alternatives)?
{ after(grammarAccess.getSimple_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleassignment_statement
entryRuleassignment_statement 
:
{ before(grammarAccess.getAssignment_statementRule()); }
	 ruleassignment_statement
{ after(grammarAccess.getAssignment_statementRule()); } 
	 EOF 
;

// Rule assignment_statement
ruleassignment_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAssignment_statementAccess().getGroup()); }
(rule__Assignment_statement__Group__0)
{ after(grammarAccess.getAssignment_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable
entryRulevariable 
:
{ before(grammarAccess.getVariableRule()); }
	 rulevariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule variable
rulevariable 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleentire_variable
entryRuleentire_variable 
:
{ before(grammarAccess.getEntire_variableRule()); }
	 ruleentire_variable
{ after(grammarAccess.getEntire_variableRule()); } 
	 EOF 
;

// Rule entire_variable
ruleentire_variable 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getEntire_variableAccess().getIDENTIFIERTerminalRuleCall()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getEntire_variableAccess().getIDENTIFIERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecomponent_variable
entryRulecomponent_variable 
:
{ before(grammarAccess.getComponent_variableRule()); }
	 rulecomponent_variable
{ after(grammarAccess.getComponent_variableRule()); } 
	 EOF 
;

// Rule component_variable
rulecomponent_variable 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponent_variableAccess().getGroup()); }
(rule__Component_variable__Group__0)
{ after(grammarAccess.getComponent_variableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleindexed_variable_
entryRuleindexed_variable_ 
:
{ before(grammarAccess.getIndexed_variable_Rule()); }
	 ruleindexed_variable_
{ after(grammarAccess.getIndexed_variable_Rule()); } 
	 EOF 
;

// Rule indexed_variable_
ruleindexed_variable_ 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIndexed_variable_Access().getGroup()); }
(rule__Indexed_variable___Group__0)?
{ after(grammarAccess.getIndexed_variable_Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression_list
entryRuleexpression_list 
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleexpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule expression_list
ruleexpression_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExpression_listAccess().getGroup()); }
(rule__Expression_list__Group__0)
{ after(grammarAccess.getExpression_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleexpression
entryRuleexpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_expression
entryRulesimple_expression 
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
(rule__Simple_expression__Group__0)
{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleterm
entryRuleterm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefactor
entryRulefactor 
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFactorAccess().getAlternatives()); }
(rule__Factor__Alternatives)
{ after(grammarAccess.getFactorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulenumber
entryRulenumber 
:
{ before(grammarAccess.getNumberRule()); }
	 rulenumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule number
rulenumber 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunsigned_number
entryRuleunsigned_number 
:
{ before(grammarAccess.getUnsigned_numberRule()); }
	 ruleunsigned_number
{ after(grammarAccess.getUnsigned_numberRule()); } 
	 EOF 
;

// Rule unsigned_number
ruleunsigned_number 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
(rule__Unsigned_number__Alternatives)
{ after(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesigned_number
entryRulesigned_number 
:
{ before(grammarAccess.getSigned_numberRule()); }
	 rulesigned_number
{ after(grammarAccess.getSigned_numberRule()); } 
	 EOF 
;

// Rule signed_number
rulesigned_number 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSigned_numberAccess().getAlternatives()); }
(rule__Signed_number__Alternatives)
{ after(grammarAccess.getSigned_numberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleset
entryRuleset 
:
{ before(grammarAccess.getSetRule()); }
	 ruleset
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule set
ruleset 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSetAccess().getGroup()); }
(rule__Set__Group__0)
{ after(grammarAccess.getSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_designator
entryRulefunction_designator 
:
{ before(grammarAccess.getFunction_designatorRule()); }
	 rulefunction_designator
{ after(grammarAccess.getFunction_designatorRule()); } 
	 EOF 
;

// Rule function_designator
rulefunction_designator 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunction_designatorAccess().getGroup()); }
(rule__Function_designator__Group__0)
{ after(grammarAccess.getFunction_designatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestructured_statement
entryRulestructured_statement 
:
{ before(grammarAccess.getStructured_statementRule()); }
	 rulestructured_statement
{ after(grammarAccess.getStructured_statementRule()); } 
	 EOF 
;

// Rule structured_statement
rulestructured_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStructured_statementAccess().getAlternatives()); }
(rule__Structured_statement__Alternatives)
{ after(grammarAccess.getStructured_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecompound_statement
entryRulecompound_statement 
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCompound_statementAccess().getGroup()); }
(rule__Compound_statement__Group__0)
{ after(grammarAccess.getCompound_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerepetitive_statement
entryRulerepetitive_statement 
:
{ before(grammarAccess.getRepetitive_statementRule()); }
	 rulerepetitive_statement
{ after(grammarAccess.getRepetitive_statementRule()); } 
	 EOF 
;

// Rule repetitive_statement
rulerepetitive_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRepetitive_statementAccess().getAlternatives()); }
(rule__Repetitive_statement__Alternatives)
{ after(grammarAccess.getRepetitive_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewhile_statement
entryRulewhile_statement 
:
{ before(grammarAccess.getWhile_statementRule()); }
	 rulewhile_statement
{ after(grammarAccess.getWhile_statementRule()); } 
	 EOF 
;

// Rule while_statement
rulewhile_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getWhile_statementAccess().getGroup()); }
(rule__While_statement__Group__0)
{ after(grammarAccess.getWhile_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerepeat_statement
entryRulerepeat_statement 
:
{ before(grammarAccess.getRepeat_statementRule()); }
	 rulerepeat_statement
{ after(grammarAccess.getRepeat_statementRule()); } 
	 EOF 
;

// Rule repeat_statement
rulerepeat_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRepeat_statementAccess().getGroup()); }
(rule__Repeat_statement__Group__0)
{ after(grammarAccess.getRepeat_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefor_statement
entryRulefor_statement 
:
{ before(grammarAccess.getFor_statementRule()); }
	 rulefor_statement
{ after(grammarAccess.getFor_statementRule()); } 
	 EOF 
;

// Rule for_statement
rulefor_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFor_statementAccess().getGroup()); }
(rule__For_statement__Group__0)
{ after(grammarAccess.getFor_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconditional_statement
entryRuleconditional_statement 
:
{ before(grammarAccess.getConditional_statementRule()); }
	 ruleconditional_statement
{ after(grammarAccess.getConditional_statementRule()); } 
	 EOF 
;

// Rule conditional_statement
ruleconditional_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConditional_statementAccess().getAlternatives()); }
(rule__Conditional_statement__Alternatives)
{ after(grammarAccess.getConditional_statementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleif_statement
entryRuleif_statement 
:
{ before(grammarAccess.getIf_statementRule()); }
	 ruleif_statement
{ after(grammarAccess.getIf_statementRule()); } 
	 EOF 
;

// Rule if_statement
ruleif_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIf_statementAccess().getGroup()); }
(rule__If_statement__Group__0)
{ after(grammarAccess.getIf_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecase_statement
entryRulecase_statement 
:
{ before(grammarAccess.getCase_statementRule()); }
	 rulecase_statement
{ after(grammarAccess.getCase_statementRule()); } 
	 EOF 
;

// Rule case_statement
rulecase_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCase_statementAccess().getGroup()); }
(rule__Case_statement__Group__0)
{ after(grammarAccess.getCase_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecase_limb
entryRulecase_limb 
:
{ before(grammarAccess.getCase_limbRule()); }
	 rulecase_limb
{ after(grammarAccess.getCase_limbRule()); } 
	 EOF 
;

// Rule case_limb
rulecase_limb 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCase_limbAccess().getGroup()); }
(rule__Case_limb__Group__0)
{ after(grammarAccess.getCase_limbAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecase_label_list
entryRulecase_label_list 
:
{ before(grammarAccess.getCase_label_listRule()); }
	 rulecase_label_list
{ after(grammarAccess.getCase_label_listRule()); } 
	 EOF 
;

// Rule case_label_list
rulecase_label_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCase_label_listAccess().getGroup()); }
(rule__Case_label_list__Group__0)
{ after(grammarAccess.getCase_label_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant
entryRuleconstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantAccess().getAlternatives()); }
(rule__Constant__Alternatives)
{ after(grammarAccess.getConstantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulewith_statement
entryRulewith_statement 
:
{ before(grammarAccess.getWith_statementRule()); }
	 rulewith_statement
{ after(grammarAccess.getWith_statementRule()); } 
	 EOF 
;

// Rule with_statement
rulewith_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getWith_statementAccess().getGroup()); }
(rule__With_statement__Group__0)
{ after(grammarAccess.getWith_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulegoto_statement
entryRulegoto_statement 
:
{ before(grammarAccess.getGoto_statementRule()); }
	 rulegoto_statement
{ after(grammarAccess.getGoto_statementRule()); } 
	 EOF 
;

// Rule goto_statement
rulegoto_statement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getGoto_statementAccess().getGroup()); }
(rule__Goto_statement__Group__0)
{ after(grammarAccess.getGoto_statementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledeclaration_part
entryRuledeclaration_part 
:
{ before(grammarAccess.getDeclaration_partRule()); }
	 ruledeclaration_part
{ after(grammarAccess.getDeclaration_partRule()); } 
	 EOF 
;

// Rule declaration_part
ruledeclaration_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDeclaration_partAccess().getGroup()); }
(rule__Declaration_part__Group__0)
{ after(grammarAccess.getDeclaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulelabel_declaration_part
entryRulelabel_declaration_part 
:
{ before(grammarAccess.getLabel_declaration_partRule()); }
	 rulelabel_declaration_part
{ after(grammarAccess.getLabel_declaration_partRule()); } 
	 EOF 
;

// Rule label_declaration_part
rulelabel_declaration_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLabel_declaration_partAccess().getGroup()); }
(rule__Label_declaration_part__Group__0)
{ after(grammarAccess.getLabel_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_definition_part
entryRuleconstant_definition_part 
:
{ before(grammarAccess.getConstant_definition_partRule()); }
	 ruleconstant_definition_part
{ after(grammarAccess.getConstant_definition_partRule()); } 
	 EOF 
;

// Rule constant_definition_part
ruleconstant_definition_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstant_definition_partAccess().getGroup()); }
(rule__Constant_definition_part__Group__0)
{ after(grammarAccess.getConstant_definition_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconstant_definition
entryRuleconstant_definition 
:
{ before(grammarAccess.getConstant_definitionRule()); }
	 ruleconstant_definition
{ after(grammarAccess.getConstant_definitionRule()); } 
	 EOF 
;

// Rule constant_definition
ruleconstant_definition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstant_definitionAccess().getGroup()); }
(rule__Constant_definition__Group__0)
{ after(grammarAccess.getConstant_definitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_definition_part
entryRuletype_definition_part 
:
{ before(grammarAccess.getType_definition_partRule()); }
	 ruletype_definition_part
{ after(grammarAccess.getType_definition_partRule()); } 
	 EOF 
;

// Rule type_definition_part
ruletype_definition_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_definition_partAccess().getGroup()); }
(rule__Type_definition_part__Group__0)
{ after(grammarAccess.getType_definition_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype_definition
entryRuletype_definition 
:
{ before(grammarAccess.getType_definitionRule()); }
	 ruletype_definition
{ after(grammarAccess.getType_definitionRule()); } 
	 EOF 
;

// Rule type_definition
ruletype_definition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getType_definitionAccess().getGroup()); }
(rule__Type_definition__Group__0)
{ after(grammarAccess.getType_definitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletype
entryRuletype 
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_type
entryRulesimple_type 
:
{ before(grammarAccess.getSimple_typeRule()); }
	 rulesimple_type
{ after(grammarAccess.getSimple_typeRule()); } 
	 EOF 
;

// Rule simple_type
rulesimple_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSimple_typeAccess().getAlternatives()); }
(rule__Simple_type__Alternatives)
{ after(grammarAccess.getSimple_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesubrange_type
entryRulesubrange_type 
:
{ before(grammarAccess.getSubrange_typeRule()); }
	 rulesubrange_type
{ after(grammarAccess.getSubrange_typeRule()); } 
	 EOF 
;

// Rule subrange_type
rulesubrange_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSubrange_typeAccess().getAlternatives()); }
(rule__Subrange_type__Alternatives)
{ after(grammarAccess.getSubrange_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleenumerated_type
entryRuleenumerated_type 
:
{ before(grammarAccess.getEnumerated_typeRule()); }
	 ruleenumerated_type
{ after(grammarAccess.getEnumerated_typeRule()); } 
	 EOF 
;

// Rule enumerated_type
ruleenumerated_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getEnumerated_typeAccess().getGroup()); }
(rule__Enumerated_type__Group__0)
{ after(grammarAccess.getEnumerated_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulestructured_type
entryRulestructured_type 
:
{ before(grammarAccess.getStructured_typeRule()); }
	 rulestructured_type
{ after(grammarAccess.getStructured_typeRule()); } 
	 EOF 
;

// Rule structured_type
rulestructured_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStructured_typeAccess().getGroup()); }
(rule__Structured_type__Group__0)
{ after(grammarAccess.getStructured_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunpacked_structured_type
entryRuleunpacked_structured_type 
:
{ before(grammarAccess.getUnpacked_structured_typeRule()); }
	 ruleunpacked_structured_type
{ after(grammarAccess.getUnpacked_structured_typeRule()); } 
	 EOF 
;

// Rule unpacked_structured_type
ruleunpacked_structured_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); }
(rule__Unpacked_structured_type__Alternatives)
{ after(grammarAccess.getUnpacked_structured_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulearray_type
entryRulearray_type 
:
{ before(grammarAccess.getArray_typeRule()); }
	 rulearray_type
{ after(grammarAccess.getArray_typeRule()); } 
	 EOF 
;

// Rule array_type
rulearray_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArray_typeAccess().getGroup()); }
(rule__Array_type__Group__0)
{ after(grammarAccess.getArray_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuledynamic_array_type
entryRuledynamic_array_type 
:
{ before(grammarAccess.getDynamic_array_typeRule()); }
	 ruledynamic_array_type
{ after(grammarAccess.getDynamic_array_typeRule()); } 
	 EOF 
;

// Rule dynamic_array_type
ruledynamic_array_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getDynamic_array_typeAccess().getGroup()); }
(rule__Dynamic_array_type__Group__0)
{ after(grammarAccess.getDynamic_array_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleindex_type
entryRuleindex_type 
:
{ before(grammarAccess.getIndex_typeRule()); }
	 ruleindex_type
{ after(grammarAccess.getIndex_typeRule()); } 
	 EOF 
;

// Rule index_type
ruleindex_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIndex_typeAccess().getSimple_typeParserRuleCall()); }
	rulesimple_type
{ after(grammarAccess.getIndex_typeAccess().getSimple_typeParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerecord_type
entryRulerecord_type 
:
{ before(grammarAccess.getRecord_typeRule()); }
	 rulerecord_type
{ after(grammarAccess.getRecord_typeRule()); } 
	 EOF 
;

// Rule record_type
rulerecord_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecord_typeAccess().getGroup()); }
(rule__Record_type__Group__0)
{ after(grammarAccess.getRecord_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefield_list
entryRulefield_list 
:
{ before(grammarAccess.getField_listRule()); }
	 rulefield_list
{ after(grammarAccess.getField_listRule()); } 
	 EOF 
;

// Rule field_list
rulefield_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getField_listAccess().getGroup()); }
(rule__Field_list__Group__0)?
{ after(grammarAccess.getField_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefixed_part
entryRulefixed_part 
:
{ before(grammarAccess.getFixed_partRule()); }
	 rulefixed_part
{ after(grammarAccess.getFixed_partRule()); } 
	 EOF 
;

// Rule fixed_part
rulefixed_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFixed_partAccess().getGroup()); }
(rule__Fixed_part__Group__0)
{ after(grammarAccess.getFixed_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulerecord_section
entryRulerecord_section 
:
{ before(grammarAccess.getRecord_sectionRule()); }
	 rulerecord_section
{ after(grammarAccess.getRecord_sectionRule()); } 
	 EOF 
;

// Rule record_section
rulerecord_section 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecord_sectionAccess().getGroup()); }
(rule__Record_section__Group__0)
{ after(grammarAccess.getRecord_sectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariant_part
entryRulevariant_part 
:
{ before(grammarAccess.getVariant_partRule()); }
	 rulevariant_part
{ after(grammarAccess.getVariant_partRule()); } 
	 EOF 
;

// Rule variant_part
rulevariant_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariant_partAccess().getGroup()); }
(rule__Variant_part__Group__0)
{ after(grammarAccess.getVariant_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuletag_field
entryRuletag_field 
:
{ before(grammarAccess.getTag_fieldRule()); }
	 ruletag_field
{ after(grammarAccess.getTag_fieldRule()); } 
	 EOF 
;

// Rule tag_field
ruletag_field 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTag_fieldAccess().getGroup()); }
(rule__Tag_field__Group__0)?
{ after(grammarAccess.getTag_fieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariant
entryRulevariant 
:
{ before(grammarAccess.getVariantRule()); }
	 rulevariant
{ after(grammarAccess.getVariantRule()); } 
	 EOF 
;

// Rule variant
rulevariant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariantAccess().getGroup()); }
(rule__Variant__Group__0)
{ after(grammarAccess.getVariantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleset_type
entryRuleset_type 
:
{ before(grammarAccess.getSet_typeRule()); }
	 ruleset_type
{ after(grammarAccess.getSet_typeRule()); } 
	 EOF 
;

// Rule set_type
ruleset_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSet_typeAccess().getGroup()); }
(rule__Set_type__Group__0)
{ after(grammarAccess.getSet_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefile_type
entryRulefile_type 
:
{ before(grammarAccess.getFile_typeRule()); }
	 rulefile_type
{ after(grammarAccess.getFile_typeRule()); } 
	 EOF 
;

// Rule file_type
rulefile_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFile_typeAccess().getGroup()); }
(rule__File_type__Group__0)
{ after(grammarAccess.getFile_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepointer_type
entryRulepointer_type 
:
{ before(grammarAccess.getPointer_typeRule()); }
	 rulepointer_type
{ after(grammarAccess.getPointer_typeRule()); } 
	 EOF 
;

// Rule pointer_type
rulepointer_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPointer_typeAccess().getGroup()); }
(rule__Pointer_type__Group__0)
{ after(grammarAccess.getPointer_typeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_declaration_part
entryRulevariable_declaration_part 
:
{ before(grammarAccess.getVariable_declaration_partRule()); }
	 rulevariable_declaration_part
{ after(grammarAccess.getVariable_declaration_partRule()); } 
	 EOF 
;

// Rule variable_declaration_part
rulevariable_declaration_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
(rule__Variable_declaration_part__Group__0)
{ after(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprocedure_and_function_declaration_part
entryRuleprocedure_and_function_declaration_part 
:
{ before(grammarAccess.getProcedure_and_function_declaration_partRule()); }
	 ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getProcedure_and_function_declaration_partRule()); } 
	 EOF 
;

// Rule procedure_and_function_declaration_part
ruleprocedure_and_function_declaration_part 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
(rule__Procedure_and_function_declaration_part__Group__0)*
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprocedure_declaration
entryRuleprocedure_declaration 
:
{ before(grammarAccess.getProcedure_declarationRule()); }
	 ruleprocedure_declaration
{ after(grammarAccess.getProcedure_declarationRule()); } 
	 EOF 
;

// Rule procedure_declaration
ruleprocedure_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProcedure_declarationAccess().getGroup()); }
(rule__Procedure_declaration__Group__0)
{ after(grammarAccess.getProcedure_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleprocedure_heading
entryRuleprocedure_heading 
:
{ before(grammarAccess.getProcedure_headingRule()); }
	 ruleprocedure_heading
{ after(grammarAccess.getProcedure_headingRule()); } 
	 EOF 
;

// Rule procedure_heading
ruleprocedure_heading 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getProcedure_headingAccess().getGroup()); }
(rule__Procedure_heading__Group__0)
{ after(grammarAccess.getProcedure_headingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleformal_parameter_list
entryRuleformal_parameter_list 
:
{ before(grammarAccess.getFormal_parameter_listRule()); }
	 ruleformal_parameter_list
{ after(grammarAccess.getFormal_parameter_listRule()); } 
	 EOF 
;

// Rule formal_parameter_list
ruleformal_parameter_list 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
(rule__Formal_parameter_list__Group__0)
{ after(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleformal_parameter_section
entryRuleformal_parameter_section 
:
{ before(grammarAccess.getFormal_parameter_sectionRule()); }
	 ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionRule()); } 
	 EOF 
;

// Rule formal_parameter_section
ruleformal_parameter_section 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
(rule__Formal_parameter_section__Alternatives)
{ after(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevalue_parameter_section
entryRulevalue_parameter_section 
:
{ before(grammarAccess.getValue_parameter_sectionRule()); }
	 rulevalue_parameter_section
{ after(grammarAccess.getValue_parameter_sectionRule()); } 
	 EOF 
;

// Rule value_parameter_section
rulevalue_parameter_section 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getValue_parameter_sectionAccess().getGroup()); }
(rule__Value_parameter_section__Group__0)
{ after(grammarAccess.getValue_parameter_sectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleparameter_type
entryRuleparameter_type 
:
{ before(grammarAccess.getParameter_typeRule()); }
	 ruleparameter_type
{ after(grammarAccess.getParameter_typeRule()); } 
	 EOF 
;

// Rule parameter_type
ruleparameter_type 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameter_typeAccess().getAlternatives()); }
(rule__Parameter_type__Alternatives)
{ after(grammarAccess.getParameter_typeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleconformant_array_schema
entryRuleconformant_array_schema 
:
{ before(grammarAccess.getConformant_array_schemaRule()); }
	 ruleconformant_array_schema
{ after(grammarAccess.getConformant_array_schemaRule()); } 
	 EOF 
;

// Rule conformant_array_schema
ruleconformant_array_schema 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConformant_array_schemaAccess().getAlternatives()); }
(rule__Conformant_array_schema__Alternatives)
{ after(grammarAccess.getConformant_array_schemaAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepacked_conformant_array_schema
entryRulepacked_conformant_array_schema 
:
{ before(grammarAccess.getPacked_conformant_array_schemaRule()); }
	 rulepacked_conformant_array_schema
{ after(grammarAccess.getPacked_conformant_array_schemaRule()); } 
	 EOF 
;

// Rule packed_conformant_array_schema
rulepacked_conformant_array_schema 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getGroup()); }
(rule__Packed_conformant_array_schema__Group__0)
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulebound_specification
entryRulebound_specification 
:
{ before(grammarAccess.getBound_specificationRule()); }
	 rulebound_specification
{ after(grammarAccess.getBound_specificationRule()); } 
	 EOF 
;

// Rule bound_specification
rulebound_specification 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBound_specificationAccess().getGroup()); }
(rule__Bound_specification__Group__0)
{ after(grammarAccess.getBound_specificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleunpacked_conformant_array_schema
entryRuleunpacked_conformant_array_schema 
:
{ before(grammarAccess.getUnpacked_conformant_array_schemaRule()); }
	 ruleunpacked_conformant_array_schema
{ after(grammarAccess.getUnpacked_conformant_array_schemaRule()); } 
	 EOF 
;

// Rule unpacked_conformant_array_schema
ruleunpacked_conformant_array_schema 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup()); }
(rule__Unpacked_conformant_array_schema__Group__0)
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulevariable_parameter_section
entryRulevariable_parameter_section 
:
{ before(grammarAccess.getVariable_parameter_sectionRule()); }
	 rulevariable_parameter_section
{ after(grammarAccess.getVariable_parameter_sectionRule()); } 
	 EOF 
;

// Rule variable_parameter_section
rulevariable_parameter_section 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); }
(rule__Variable_parameter_section__Group__0)
{ after(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_heading
entryRulefunction_heading 
:
{ before(grammarAccess.getFunction_headingRule()); }
	 rulefunction_heading
{ after(grammarAccess.getFunction_headingRule()); } 
	 EOF 
;

// Rule function_heading
rulefunction_heading 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunction_headingAccess().getGroup()); }
(rule__Function_heading__Group__0)
{ after(grammarAccess.getFunction_headingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefunction_declaration
entryRulefunction_declaration 
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 rulefunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
(rule__Function_declaration__Group__0)
{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSimple_statementParserRuleCall_1_0()); }
	rulesimple_statement
{ after(grammarAccess.getStatementAccess().getSimple_statementParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getStructured_statementParserRuleCall_1_1()); }
	rulestructured_statement
{ after(grammarAccess.getStatementAccess().getStructured_statementParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getSIGNED_INTEGER_NUMBERTerminalRuleCall_0()); }
	RULE_SIGNED_INTEGER_NUMBER
{ after(grammarAccess.getLabelAccess().getSIGNED_INTEGER_NUMBERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLabelAccess().getINTEGER_NUMBERTerminalRuleCall_1()); }
	RULE_INTEGER_NUMBER
{ after(grammarAccess.getLabelAccess().getINTEGER_NUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_statementAccess().getAssignment_statementParserRuleCall_0()); }
	ruleassignment_statement
{ after(grammarAccess.getSimple_statementAccess().getAssignment_statementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimple_statementAccess().getFunction_designatorParserRuleCall_1()); }
	rulefunction_designator
{ after(grammarAccess.getSimple_statementAccess().getFunction_designatorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSimple_statementAccess().getGoto_statementParserRuleCall_2()); }
	rulegoto_statement
{ after(grammarAccess.getSimple_statementAccess().getGoto_statementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSimple_statementAccess().getIDENTIFIERTerminalRuleCall_3()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getSimple_statementAccess().getIDENTIFIERTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEntire_variableParserRuleCall_0()); }
	ruleentire_variable
{ after(grammarAccess.getVariableAccess().getEntire_variableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getComponent_variableParserRuleCall_1()); }
	rulecomponent_variable
{ after(grammarAccess.getVariableAccess().getComponent_variableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); }
(rule__Simple_expression__Group_2_0__0)
{ after(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getSimple_expressionAccess().getSigned_numberParserRuleCall_2_1()); }
	rulesigned_number
{ after(grammarAccess.getSimple_expressionAccess().getSigned_numberParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Alternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_2_0_0_0()); }
(	RULE_ADDITION_OPERATOR)
{ after(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_2_0_0_0()); }
)
(
{ before(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_2_0_0_0()); }
(	RULE_ADDITION_OPERATOR)*
{ after(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_2_0_0_0()); }
)
)

    |(
{ before(grammarAccess.getSimple_expressionAccess().getOR_KEYWORDTerminalRuleCall_2_0_0_1()); }
	RULE_OR_KEYWORD
{ after(grammarAccess.getSimple_expressionAccess().getOR_KEYWORDTerminalRuleCall_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getVariableParserRuleCall_0()); }
	rulevariable
{ after(grammarAccess.getFactorAccess().getVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getNumberParserRuleCall_1()); }
	rulenumber
{ after(grammarAccess.getFactorAccess().getNumberParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getFactorAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getSetParserRuleCall_3()); }
	ruleset
{ after(grammarAccess.getFactorAccess().getSetParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getNIL_KEYWORDTerminalRuleCall_4()); }
	RULE_NIL_KEYWORD
{ after(grammarAccess.getFactorAccess().getNIL_KEYWORDTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getTRUE_KEYWORDTerminalRuleCall_5()); }
	RULE_TRUE_KEYWORD
{ after(grammarAccess.getFactorAccess().getTRUE_KEYWORDTerminalRuleCall_5()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getFALSE_KEYWORDTerminalRuleCall_6()); }
	RULE_FALSE_KEYWORD
{ after(grammarAccess.getFactorAccess().getFALSE_KEYWORDTerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getFunction_designatorParserRuleCall_7()); }
	rulefunction_designator
{ after(grammarAccess.getFactorAccess().getFunction_designatorParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getGroup_8()); }
(rule__Factor__Group_8__0)
{ after(grammarAccess.getFactorAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getFactorAccess().getGroup_9()); }
(rule__Factor__Group_9__0)
{ after(grammarAccess.getFactorAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getUnsigned_numberParserRuleCall_0()); }
	ruleunsigned_number
{ after(grammarAccess.getNumberAccess().getUnsigned_numberParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getSigned_numberParserRuleCall_1()); }
	rulesigned_number
{ after(grammarAccess.getNumberAccess().getSigned_numberParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnsigned_numberAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
	RULE_INTEGER_NUMBER
{ after(grammarAccess.getUnsigned_numberAccess().getINTEGER_NUMBERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnsigned_numberAccess().getREAL_NUMBERTerminalRuleCall_1()); }
	RULE_REAL_NUMBER
{ after(grammarAccess.getUnsigned_numberAccess().getREAL_NUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigned_numberAccess().getSIGNED_INTEGER_NUMBERTerminalRuleCall_0()); }
	RULE_SIGNED_INTEGER_NUMBER
{ after(grammarAccess.getSigned_numberAccess().getSIGNED_INTEGER_NUMBERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSigned_numberAccess().getSIGNED_REAL_NUMBERTerminalRuleCall_1()); }
	RULE_SIGNED_REAL_NUMBER
{ after(grammarAccess.getSigned_numberAccess().getSIGNED_REAL_NUMBERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructured_statementAccess().getCompound_statementParserRuleCall_0()); }
	rulecompound_statement
{ after(grammarAccess.getStructured_statementAccess().getCompound_statementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStructured_statementAccess().getRepetitive_statementParserRuleCall_1()); }
	rulerepetitive_statement
{ after(grammarAccess.getStructured_statementAccess().getRepetitive_statementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStructured_statementAccess().getConditional_statementParserRuleCall_2()); }
	ruleconditional_statement
{ after(grammarAccess.getStructured_statementAccess().getConditional_statementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStructured_statementAccess().getWith_statementParserRuleCall_3()); }
	rulewith_statement
{ after(grammarAccess.getStructured_statementAccess().getWith_statementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repetitive_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepetitive_statementAccess().getWhile_statementParserRuleCall_0()); }
	rulewhile_statement
{ after(grammarAccess.getRepetitive_statementAccess().getWhile_statementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRepetitive_statementAccess().getRepeat_statementParserRuleCall_1()); }
	rulerepeat_statement
{ after(grammarAccess.getRepetitive_statementAccess().getRepeat_statementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRepetitive_statementAccess().getFor_statementParserRuleCall_2()); }
	rulefor_statement
{ after(grammarAccess.getRepetitive_statementAccess().getFor_statementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getTO_KEYWORDTerminalRuleCall_2_0()); }
	RULE_TO_KEYWORD
{ after(grammarAccess.getFor_statementAccess().getTO_KEYWORDTerminalRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getFor_statementAccess().getDOWNTO_KEYWORDTerminalRuleCall_2_1()); }
	RULE_DOWNTO_KEYWORD
{ after(grammarAccess.getFor_statementAccess().getDOWNTO_KEYWORDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional_statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditional_statementAccess().getIf_statementParserRuleCall_0()); }
	ruleif_statement
{ after(grammarAccess.getConditional_statementAccess().getIf_statementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConditional_statementAccess().getCase_statementParserRuleCall_1()); }
	rulecase_statement
{ after(grammarAccess.getConditional_statementAccess().getCase_statementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getGroup_0()); }
(rule__Constant__Group_0__0)
{ after(grammarAccess.getConstantAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getConstantAccess().getSTRINGTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getIDENTIFIERTerminalRuleCall_0_1_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getConstantAccess().getIDENTIFIERTerminalRuleCall_0_1_0()); }
)

    |(
{ before(grammarAccess.getConstantAccess().getNumberParserRuleCall_0_1_1()); }
	rulenumber
{ after(grammarAccess.getConstantAccess().getNumberParserRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSimple_typeParserRuleCall_0()); }
	rulesimple_type
{ after(grammarAccess.getTypeAccess().getSimple_typeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getStructured_typeParserRuleCall_1()); }
	rulestructured_type
{ after(grammarAccess.getTypeAccess().getStructured_typeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPointer_typeParserRuleCall_2()); }
	rulepointer_type
{ after(grammarAccess.getTypeAccess().getPointer_typeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getIDENTIFIERTerminalRuleCall_3()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTypeAccess().getIDENTIFIERTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_typeAccess().getSubrange_typeParserRuleCall_0()); }
	rulesubrange_type
{ after(grammarAccess.getSimple_typeAccess().getSubrange_typeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimple_typeAccess().getEnumerated_typeParserRuleCall_1()); }
	ruleenumerated_type
{ after(grammarAccess.getSimple_typeAccess().getEnumerated_typeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrange_typeAccess().getGroup_0()); }
(rule__Subrange_type__Group_0__0)
{ after(grammarAccess.getSubrange_typeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSubrange_typeAccess().getNUMERIC_SUBRANGETerminalRuleCall_1()); }
	RULE_NUMERIC_SUBRANGE
{ after(grammarAccess.getSubrange_typeAccess().getNUMERIC_SUBRANGETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_structured_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getArray_typeParserRuleCall_0()); }
	rulearray_type
{ after(grammarAccess.getUnpacked_structured_typeAccess().getArray_typeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getDynamic_array_typeParserRuleCall_1()); }
	ruledynamic_array_type
{ after(grammarAccess.getUnpacked_structured_typeAccess().getDynamic_array_typeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getRecord_typeParserRuleCall_2()); }
	rulerecord_type
{ after(grammarAccess.getUnpacked_structured_typeAccess().getRecord_typeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getSet_typeParserRuleCall_3()); }
	ruleset_type
{ after(grammarAccess.getUnpacked_structured_typeAccess().getSet_typeParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getUnpacked_structured_typeAccess().getFile_typeParserRuleCall_4()); }
	rulefile_type
{ after(grammarAccess.getUnpacked_structured_typeAccess().getFile_typeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getGroup_0_0()); }
(rule__Field_list__Group_0_0__0)
{ after(grammarAccess.getField_listAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getField_listAccess().getVariant_partParserRuleCall_0_1()); }
	rulevariant_part
{ after(grammarAccess.getField_listAccess().getVariant_partParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_declarationParserRuleCall_0_0()); }
	ruleprocedure_declaration
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getProcedure_declarationParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunction_declarationParserRuleCall_0_1()); }
	rulefunction_declaration
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getFunction_declarationParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_declarationAccess().getBlockParserRuleCall_2_0()); }
	ruleblock
{ after(grammarAccess.getProcedure_declarationAccess().getBlockParserRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getProcedure_declarationAccess().getFORWARD_KEYWORDTerminalRuleCall_2_1()); }
	RULE_FORWARD_KEYWORD
{ after(grammarAccess.getProcedure_declarationAccess().getFORWARD_KEYWORDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_sectionAccess().getValue_parameter_sectionParserRuleCall_0()); }
	rulevalue_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionAccess().getValue_parameter_sectionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFormal_parameter_sectionAccess().getVariable_parameter_sectionParserRuleCall_1()); }
	rulevariable_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionAccess().getVariable_parameter_sectionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFormal_parameter_sectionAccess().getProcedure_headingParserRuleCall_2()); }
	ruleprocedure_heading
{ after(grammarAccess.getFormal_parameter_sectionAccess().getProcedure_headingParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFormal_parameter_sectionAccess().getFunction_headingParserRuleCall_3()); }
	rulefunction_heading
{ after(grammarAccess.getFormal_parameter_sectionAccess().getFunction_headingParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameter_typeAccess().getConformant_array_schemaParserRuleCall_0()); }
	ruleconformant_array_schema
{ after(grammarAccess.getParameter_typeAccess().getConformant_array_schemaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameter_typeAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getParameter_typeAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conformant_array_schema__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConformant_array_schemaAccess().getPacked_conformant_array_schemaParserRuleCall_0()); }
	rulepacked_conformant_array_schema
{ after(grammarAccess.getConformant_array_schemaAccess().getPacked_conformant_array_schemaParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConformant_array_schemaAccess().getUnpacked_conformant_array_schemaParserRuleCall_1()); }
	ruleunpacked_conformant_array_schema
{ after(grammarAccess.getConformant_array_schemaAccess().getUnpacked_conformant_array_schemaParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getConformant_array_schemaParserRuleCall_6_0()); }
	ruleconformant_array_schema
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getConformant_array_schemaParserRuleCall_6_0()); }
)

    |(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getIDENTIFIERTerminalRuleCall_6_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getIDENTIFIERTerminalRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getBlockParserRuleCall_2_0()); }
	ruleblock
{ after(grammarAccess.getFunction_declarationAccess().getBlockParserRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getFunction_declarationAccess().getFORWARD_KEYWORDTerminalRuleCall_2_1()); }
	RULE_FORWARD_KEYWORD
{ after(grammarAccess.getFunction_declarationAccess().getFORWARD_KEYWORDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getProgram_heading_blockParserRuleCall_0()); }
	ruleprogram_heading_block
{ after(grammarAccess.getProgramAccess().getProgram_heading_blockParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getBlockParserRuleCall_1()); }
	ruleblock
{ after(grammarAccess.getProgramAccess().getBlockParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }

	FullStop 

{ after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Program_heading_block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group__0__Impl
	rule__Program_heading_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }

	Program 

{ after(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group__1__Impl
	rule__Program_heading_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getProgram_heading_blockAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group__2__Impl
	rule__Program_heading_block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); }
(rule__Program_heading_block__Group_2__0)?
{ after(grammarAccess.getProgram_heading_blockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); }

	Semicolon 

{ after(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Program_heading_block__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group_2__0__Impl
	rule__Program_heading_block__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); }

	LeftParenthesis 

{ after(grammarAccess.getProgram_heading_blockAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group_2__1__Impl
	rule__Program_heading_block__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getIdentifier_listParserRuleCall_2_1()); }
	ruleidentifier_list
{ after(grammarAccess.getProgram_heading_blockAccess().getIdentifier_listParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program_heading_block__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); }

	RightParenthesis 

{ after(grammarAccess.getProgram_heading_blockAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
(rule__Identifier_list__Group_1__0)*
{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Identifier_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }

	Comma 

{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getIdentifier_listAccess().getIDENTIFIERTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getDeclaration_partParserRuleCall_0()); }
	ruledeclaration_part
{ after(grammarAccess.getBlockAccess().getDeclaration_partParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatement_partParserRuleCall_1()); }
	rulestatement_part
{ after(grammarAccess.getBlockAccess().getStatement_partParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__0__Impl
	rule__Statement_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getBEGIN_KEYWORDTerminalRuleCall_0()); }
	RULE_BEGIN_KEYWORD
{ after(grammarAccess.getStatement_partAccess().getBEGIN_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__1__Impl
	rule__Statement_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getStatement_sequenceParserRuleCall_1()); }
	rulestatement_sequence
{ after(grammarAccess.getStatement_partAccess().getStatement_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_part__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_partAccess().getEND_KEYWORDTerminalRuleCall_2()); }
	RULE_END_KEYWORD
{ after(grammarAccess.getStatement_partAccess().getEND_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Statement_sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group__0__Impl
	rule__Statement_sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_0()); }
	rulestatement
{ after(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getGroup_1()); }
(rule__Statement_sequence__Group_1__0)*
{ after(grammarAccess.getStatement_sequenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement_sequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group_1__0__Impl
	rule__Statement_sequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); }

	Semicolon 

{ after(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_sequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement_sequence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_1_1()); }
	rulestatement
{ after(grammarAccess.getStatement_sequenceAccess().getStatementParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)?
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
(rule__Statement__Alternatives_1)
{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getLabelParserRuleCall_0_0()); }
	rulelabel
{ after(grammarAccess.getStatementAccess().getLabelParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }

	Colon 

{ after(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment_statement__Group__0__Impl
	rule__Assignment_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignment_statementAccess().getVariableParserRuleCall_0()); }
	rulevariable
{ after(grammarAccess.getAssignment_statementAccess().getVariableParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment_statement__Group__1__Impl
	rule__Assignment_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); }

	ColonEqualsSign 

{ after(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignment_statementAccess().getExpressionParserRuleCall_2()); }
	ruleexpression
{ after(grammarAccess.getAssignment_statementAccess().getExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Component_variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_variable__Group__0__Impl
	rule__Component_variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_variableAccess().getEntire_variableParserRuleCall_0()); }
	ruleentire_variable
{ after(grammarAccess.getComponent_variableAccess().getEntire_variableParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_variable__Group__1__Impl
	rule__Component_variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_variableAccess().getLeftSquareBracketKeyword_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getComponent_variableAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_variable__Group__2__Impl
	rule__Component_variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_variableAccess().getExpression_listParserRuleCall_2()); }
	ruleexpression_list
{ after(grammarAccess.getComponent_variableAccess().getExpression_listParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_variable__Group__3__Impl
	rule__Component_variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_variable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_variableAccess().getRightSquareBracketKeyword_3()); }

	RightSquareBracket 

{ after(grammarAccess.getComponent_variableAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Component_variable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Component_variable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Component_variable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponent_variableAccess().getIndexed_variable_ParserRuleCall_4()); }
	ruleindexed_variable_
{ after(grammarAccess.getComponent_variableAccess().getIndexed_variable_ParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Indexed_variable___Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indexed_variable___Group__0__Impl
	rule__Indexed_variable___Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed_variable___Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexed_variable_Access().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getIndexed_variable_Access().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indexed_variable___Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indexed_variable___Group__1__Impl
	rule__Indexed_variable___Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed_variable___Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexed_variable_Access().getExpression_listParserRuleCall_1()); }
	ruleexpression_list
{ after(grammarAccess.getIndexed_variable_Access().getExpression_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indexed_variable___Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indexed_variable___Group__2__Impl
	rule__Indexed_variable___Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed_variable___Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexed_variable_Access().getRightSquareBracketKeyword_2()); }

	RightSquareBracket 

{ after(grammarAccess.getIndexed_variable_Access().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Indexed_variable___Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Indexed_variable___Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Indexed_variable___Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexed_variable_Access().getIndexed_variable_ParserRuleCall_3()); }
	ruleindexed_variable_
{ after(grammarAccess.getIndexed_variable_Access().getIndexed_variable_ParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Expression_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpressionParserRuleCall_0()); }
	ruleexpression
{ after(grammarAccess.getExpression_listAccess().getExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
(rule__Expression_list__Group_1__0)*
{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }

	Comma 

{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpression_listAccess().getExpressionParserRuleCall_1_1()); }
	ruleexpression
{ after(grammarAccess.getExpression_listAccess().getExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSimple_expressionParserRuleCall_0()); }
	rulesimple_expression
{ after(grammarAccess.getExpressionAccess().getSimple_expressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRELATIONAL_OPERATORTerminalRuleCall_1_0()); }
	RULE_RELATIONAL_OPERATOR
{ after(grammarAccess.getExpressionAccess().getRELATIONAL_OPERATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getSimple_expressionParserRuleCall_1_1()); }
	rulesimple_expression
{ after(grammarAccess.getExpressionAccess().getSimple_expressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_0()); }
(	RULE_ADDITION_OPERATOR)?
{ after(grammarAccess.getSimple_expressionAccess().getADDITION_OPERATORTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__1__Impl
	rule__Simple_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getTermParserRuleCall_1()); }
	ruleterm
{ after(grammarAccess.getSimple_expressionAccess().getTermParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); }
(rule__Simple_expression__Alternatives_2)*
{ after(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Simple_expression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_2_0__0__Impl
	rule__Simple_expression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); }
(rule__Simple_expression__Alternatives_2_0_0)
{ after(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_expression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_expressionAccess().getTermParserRuleCall_2_0_1()); }
	ruleterm
{ after(grammarAccess.getSimple_expressionAccess().getTermParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	rulefactor
{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_1()); }
(rule__Term__Group_1__0)*
{ after(grammarAccess.getTermAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getMULTIPLICATION_OPERATORTerminalRuleCall_1_0()); }
	RULE_MULTIPLICATION_OPERATOR
{ after(grammarAccess.getTermAccess().getMULTIPLICATION_OPERATORTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_1_1()); }
	rulefactor
{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Factor__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_8__0__Impl
	rule__Factor__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_8_0()); }

	LeftParenthesis 

{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_8__1__Impl
	rule__Factor__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getExpressionParserRuleCall_8_1()); }
	ruleexpression
{ after(grammarAccess.getFactorAccess().getExpressionParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_8_2()); }

	RightParenthesis 

{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Factor__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_9__0__Impl
	rule__Factor__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getNOT_KEYWORDTerminalRuleCall_9_0()); }
	RULE_NOT_KEYWORD
{ after(grammarAccess.getFactorAccess().getNOT_KEYWORDTerminalRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Factor__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactorAccess().getFactorParserRuleCall_9_1()); }
	rulefactor
{ after(grammarAccess.getFactorAccess().getFactorParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Set__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getSetAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getExpression_listParserRuleCall_1()); }
(	ruleexpression_list)?
{ after(grammarAccess.getSetAccess().getExpression_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getRightSquareBracketKeyword_2()); }

	RightSquareBracket 

{ after(grammarAccess.getSetAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Function_designator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_designator__Group__0__Impl
	rule__Function_designator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_designatorAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getFunction_designatorAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_designator__Group__1__Impl
	rule__Function_designator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_designator__Group__2__Impl
	rule__Function_designator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_designatorAccess().getExpression_listParserRuleCall_2()); }
(	ruleexpression_list)?
{ after(grammarAccess.getFunction_designatorAccess().getExpression_listParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_designator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Compound_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compound_statement__Group__0__Impl
	rule__Compound_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompound_statementAccess().getBEGIN_KEYWORDTerminalRuleCall_0()); }
	RULE_BEGIN_KEYWORD
{ after(grammarAccess.getCompound_statementAccess().getBEGIN_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compound_statement__Group__1__Impl
	rule__Compound_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompound_statementAccess().getStatement_sequenceParserRuleCall_1()); }
	rulestatement_sequence
{ after(grammarAccess.getCompound_statementAccess().getStatement_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Compound_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompound_statementAccess().getEND_KEYWORDTerminalRuleCall_2()); }
	RULE_END_KEYWORD
{ after(grammarAccess.getCompound_statementAccess().getEND_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__While_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__0__Impl
	rule__While_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getWHILE_KEYWORDTerminalRuleCall_0()); }
	RULE_WHILE_KEYWORD
{ after(grammarAccess.getWhile_statementAccess().getWHILE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__1__Impl
	rule__While_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
{ after(grammarAccess.getWhile_statementAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__2__Impl
	rule__While_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getDO_KEYWORDTerminalRuleCall_2()); }
	RULE_DO_KEYWORD
{ after(grammarAccess.getWhile_statementAccess().getDO_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__While_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhile_statementAccess().getStatementParserRuleCall_3()); }
	rulestatement
{ after(grammarAccess.getWhile_statementAccess().getStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Repeat_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat_statement__Group__0__Impl
	rule__Repeat_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeat_statementAccess().getREPEAT_KEYWORDTerminalRuleCall_0()); }
	RULE_REPEAT_KEYWORD
{ after(grammarAccess.getRepeat_statementAccess().getREPEAT_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat_statement__Group__1__Impl
	rule__Repeat_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeat_statementAccess().getStatement_sequenceParserRuleCall_1()); }
	rulestatement_sequence
{ after(grammarAccess.getRepeat_statementAccess().getStatement_sequenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat_statement__Group__2__Impl
	rule__Repeat_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeat_statementAccess().getUNTIL_KEYWORDTerminalRuleCall_2()); }
	RULE_UNTIL_KEYWORD
{ after(grammarAccess.getRepeat_statementAccess().getUNTIL_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeat_statementAccess().getExpressionParserRuleCall_3()); }
	ruleexpression
{ after(grammarAccess.getRepeat_statementAccess().getExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__For_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__0__Impl
	rule__For_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getFOR_KEYWORDTerminalRuleCall_0()); }
	RULE_FOR_KEYWORD
{ after(grammarAccess.getFor_statementAccess().getFOR_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__1__Impl
	rule__For_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getAssignment_statementParserRuleCall_1()); }
	ruleassignment_statement
{ after(grammarAccess.getFor_statementAccess().getAssignment_statementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__2__Impl
	rule__For_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getAlternatives_2()); }
(rule__For_statement__Alternatives_2)
{ after(grammarAccess.getFor_statementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__3__Impl
	rule__For_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_3()); }
	ruleexpression
{ after(grammarAccess.getFor_statementAccess().getExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__4__Impl
	rule__For_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getDO_KEYWORDTerminalRuleCall_4()); }
	RULE_DO_KEYWORD
{ after(grammarAccess.getFor_statementAccess().getDO_KEYWORDTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__For_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__For_statement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFor_statementAccess().getStatementParserRuleCall_5()); }
	rulestatement
{ after(grammarAccess.getFor_statementAccess().getStatementParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__If_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__0__Impl
	rule__If_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getIF_KEYWORDTerminalRuleCall_0()); }
	RULE_IF_KEYWORD
{ after(grammarAccess.getIf_statementAccess().getIF_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__1__Impl
	rule__If_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
{ after(grammarAccess.getIf_statementAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__2__Impl
	rule__If_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getTHEN_KEYWORDTerminalRuleCall_2()); }
	RULE_THEN_KEYWORD
{ after(grammarAccess.getIf_statementAccess().getTHEN_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__3__Impl
	rule__If_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_3()); }
	rulestatement
{ after(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getGroup_4()); }
(rule__If_statement__Group_4__0)?
{ after(grammarAccess.getIf_statementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__If_statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__0__Impl
	rule__If_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getELSE_KEYWORDTerminalRuleCall_4_0()); }
	RULE_ELSE_KEYWORD
{ after(grammarAccess.getIf_statementAccess().getELSE_KEYWORDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__If_statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__If_statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__If_statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_4_1()); }
	rulestatement
{ after(grammarAccess.getIf_statementAccess().getStatementParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__0__Impl
	rule__Case_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getCASE_KEYWORDTerminalRuleCall_0()); }
	RULE_CASE_KEYWORD
{ after(grammarAccess.getCase_statementAccess().getCASE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__1__Impl
	rule__Case_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getExpressionParserRuleCall_1()); }
	ruleexpression
{ after(grammarAccess.getCase_statementAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__2__Impl
	rule__Case_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getOF_KEYWORDTerminalRuleCall_2()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getCase_statementAccess().getOF_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__3__Impl
	rule__Case_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getCase_limbParserRuleCall_3()); }
	rulecase_limb
{ after(grammarAccess.getCase_statementAccess().getCase_limbParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__4__Impl
	rule__Case_statement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getGroup_4()); }
(rule__Case_statement__Group_4__0)*
{ after(grammarAccess.getCase_statementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__5__Impl
	rule__Case_statement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); }
(
	Semicolon 
)?
{ after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getEND_KEYWORDTerminalRuleCall_6()); }
	RULE_END_KEYWORD
{ after(grammarAccess.getCase_statementAccess().getEND_KEYWORDTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Case_statement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group_4__0__Impl
	rule__Case_statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); }

	Semicolon 

{ after(grammarAccess.getCase_statementAccess().getSemicolonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_statement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_statement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_statementAccess().getCase_limbParserRuleCall_4_1()); }
	rulecase_limb
{ after(grammarAccess.getCase_statementAccess().getCase_limbParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case_limb__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_limb__Group__0__Impl
	rule__Case_limb__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_limb__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_limbAccess().getCase_label_listParserRuleCall_0()); }
	rulecase_label_list
{ after(grammarAccess.getCase_limbAccess().getCase_label_listParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_limb__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_limb__Group__1__Impl
	rule__Case_limb__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_limb__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_limbAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getCase_limbAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_limb__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_limb__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_limb__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_limbAccess().getStatementParserRuleCall_2()); }
	rulestatement
{ after(grammarAccess.getCase_limbAccess().getStatementParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Case_label_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_label_list__Group__0__Impl
	rule__Case_label_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_label_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_label_listAccess().getConstantParserRuleCall_0()); }
	ruleconstant
{ after(grammarAccess.getCase_label_listAccess().getConstantParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_label_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_label_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_label_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_label_listAccess().getGroup_1()); }
(rule__Case_label_list__Group_1__0)*
{ after(grammarAccess.getCase_label_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case_label_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_label_list__Group_1__0__Impl
	rule__Case_label_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_label_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_label_listAccess().getCommaKeyword_1_0()); }

	Comma 

{ after(grammarAccess.getCase_label_listAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case_label_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case_label_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case_label_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCase_label_listAccess().getConstantParserRuleCall_1_1()); }
	ruleconstant
{ after(grammarAccess.getCase_label_listAccess().getConstantParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__0__Impl
	rule__Constant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getADDITION_OPERATORTerminalRuleCall_0_0()); }
(	RULE_ADDITION_OPERATOR)?
{ after(grammarAccess.getConstantAccess().getADDITION_OPERATORTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
(rule__Constant__Alternatives_0_1)
{ after(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__With_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group__0__Impl
	rule__With_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getWITH_KEYWORDTerminalRuleCall_0()); }
	RULE_WITH_KEYWORD
{ after(grammarAccess.getWith_statementAccess().getWITH_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__With_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group__1__Impl
	rule__With_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getVariableParserRuleCall_1()); }
	rulevariable
{ after(grammarAccess.getWith_statementAccess().getVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__With_statement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group__2__Impl
	rule__With_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getGroup_2()); }
(rule__With_statement__Group_2__0)*
{ after(grammarAccess.getWith_statementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__With_statement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group__3__Impl
	rule__With_statement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getDO_KEYWORDTerminalRuleCall_3()); }
	RULE_DO_KEYWORD
{ after(grammarAccess.getWith_statementAccess().getDO_KEYWORDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__With_statement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getStatementParserRuleCall_4()); }
	rulestatement
{ after(grammarAccess.getWith_statementAccess().getStatementParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__With_statement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group_2__0__Impl
	rule__With_statement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getCommaKeyword_2_0()); }

	Comma 

{ after(grammarAccess.getWith_statementAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__With_statement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__With_statement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__With_statement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWith_statementAccess().getVariableParserRuleCall_2_1()); }
	rulevariable
{ after(grammarAccess.getWith_statementAccess().getVariableParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Goto_statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goto_statement__Group__0__Impl
	rule__Goto_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto_statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoto_statementAccess().getGOTO_KEYWORDTerminalRuleCall_0()); }
	RULE_GOTO_KEYWORD
{ after(grammarAccess.getGoto_statementAccess().getGOTO_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goto_statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goto_statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto_statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoto_statementAccess().getLabelParserRuleCall_1()); }
	rulelabel
{ after(grammarAccess.getGoto_statementAccess().getLabelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__0__Impl
	rule__Declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getLabel_declaration_partParserRuleCall_0()); }
(	rulelabel_declaration_part)?
{ after(grammarAccess.getDeclaration_partAccess().getLabel_declaration_partParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__1__Impl
	rule__Declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getConstant_definition_partParserRuleCall_1()); }
(	ruleconstant_definition_part)?
{ after(grammarAccess.getDeclaration_partAccess().getConstant_definition_partParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__2__Impl
	rule__Declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getType_definition_partParserRuleCall_2()); }
(	ruletype_definition_part)?
{ after(grammarAccess.getDeclaration_partAccess().getType_definition_partParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__3__Impl
	rule__Declaration_part__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getVariable_declaration_partParserRuleCall_3()); }
(	rulevariable_declaration_part)?
{ after(grammarAccess.getDeclaration_partAccess().getVariable_declaration_partParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration_part__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration_part__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration_part__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaration_partAccess().getProcedure_and_function_declaration_partParserRuleCall_4()); }
	ruleprocedure_and_function_declaration_part
{ after(grammarAccess.getDeclaration_partAccess().getProcedure_and_function_declaration_partParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Label_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__0__Impl
	rule__Label_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLABEL_KEYWORDTerminalRuleCall_0()); }
	RULE_LABEL_KEYWORD
{ after(grammarAccess.getLabel_declaration_partAccess().getLABEL_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__1__Impl
	rule__Label_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_1()); }
	rulelabel
{ after(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__2__Impl
	rule__Label_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); }
(rule__Label_declaration_part__Group_2__0)*
{ after(grammarAccess.getLabel_declaration_partAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); }

	Semicolon 

{ after(grammarAccess.getLabel_declaration_partAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Label_declaration_part__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group_2__0__Impl
	rule__Label_declaration_part__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); }

	Comma 

{ after(grammarAccess.getLabel_declaration_partAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration_part__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label_declaration_part__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration_part__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_2_1()); }
	rulelabel
{ after(grammarAccess.getLabel_declaration_partAccess().getLabelParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant_definition_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__0__Impl
	rule__Constant_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getCONST_KEYWORDTerminalRuleCall_0()); }
	RULE_CONST_KEYWORD
{ after(grammarAccess.getConstant_definition_partAccess().getCONST_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
(rule__Constant_definition_part__Group_1__0)
{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
(rule__Constant_definition_part__Group_1__0)*
{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant_definition_part__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group_1__0__Impl
	rule__Constant_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_1_0()); }
	ruleconstant_definition
{ after(grammarAccess.getConstant_definition_partAccess().getConstant_definitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }

	Semicolon 

{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant_definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__0__Impl
	rule__Constant_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getConstant_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__1__Impl
	rule__Constant_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }

	EqualsSign 

{ after(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
	ruleconstant
{ after(grammarAccess.getConstant_definitionAccess().getConstantParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Type_definition_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__0__Impl
	rule__Type_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getTYPE_KEYWORDTerminalRuleCall_0()); }
	RULE_TYPE_KEYWORD
{ after(grammarAccess.getType_definition_partAccess().getTYPE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
(rule__Type_definition_part__Group_1__0)
{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
(rule__Type_definition_part__Group_1__0)*
{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type_definition_part__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group_1__0__Impl
	rule__Type_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_1_0()); }
	ruletype_definition
{ after(grammarAccess.getType_definition_partAccess().getType_definitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }

	Semicolon 

{ after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Type_definition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__0__Impl
	rule__Type_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getType_definitionAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__1__Impl
	rule__Type_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }

	EqualsSign 

{ after(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getType_definitionAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getType_definitionAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Subrange_type__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange_type__Group_0__0__Impl
	rule__Subrange_type__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrange_typeAccess().getConstantParserRuleCall_0_0()); }
	ruleconstant
{ after(grammarAccess.getSubrange_typeAccess().getConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange_type__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange_type__Group_0__1__Impl
	rule__Subrange_type__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrange_typeAccess().getFullStopFullStopKeyword_0_1()); }

	FullStopFullStop 

{ after(grammarAccess.getSubrange_typeAccess().getFullStopFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Subrange_type__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Subrange_type__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subrange_type__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubrange_typeAccess().getConstantParserRuleCall_0_2()); }
	ruleconstant
{ after(grammarAccess.getSubrange_typeAccess().getConstantParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enumerated_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerated_type__Group__0__Impl
	rule__Enumerated_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerated_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerated_typeAccess().getLeftParenthesisKeyword_0()); }

	LeftParenthesis 

{ after(grammarAccess.getEnumerated_typeAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerated_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerated_type__Group__1__Impl
	rule__Enumerated_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerated_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerated_typeAccess().getIdentifier_listParserRuleCall_1()); }
	ruleidentifier_list
{ after(grammarAccess.getEnumerated_typeAccess().getIdentifier_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enumerated_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enumerated_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enumerated_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerated_typeAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getEnumerated_typeAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Structured_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structured_type__Group__0__Impl
	rule__Structured_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructured_typeAccess().getPACKED_KEYWORDTerminalRuleCall_0()); }
(	RULE_PACKED_KEYWORD)?
{ after(grammarAccess.getStructured_typeAccess().getPACKED_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Structured_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Structured_type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructured_typeAccess().getUnpacked_structured_typeParserRuleCall_1()); }
	ruleunpacked_structured_type
{ after(grammarAccess.getStructured_typeAccess().getUnpacked_structured_typeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__0__Impl
	rule__Array_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
	RULE_ARRAY_KEYWORD
{ after(grammarAccess.getArray_typeAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__1__Impl
	rule__Array_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getArray_typeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__2__Impl
	rule__Array_type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getIndex_typeParserRuleCall_2()); }
	ruleindex_type
{ after(grammarAccess.getArray_typeAccess().getIndex_typeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__3__Impl
	rule__Array_type__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getGroup_3()); }
(rule__Array_type__Group_3__0)*
{ after(grammarAccess.getArray_typeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__4__Impl
	rule__Array_type__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getArray_typeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__5__Impl
	rule__Array_type__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getOF_KEYWORDTerminalRuleCall_5()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getArray_typeAccess().getOF_KEYWORDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getTypeParserRuleCall_6()); }
	ruletype
{ after(grammarAccess.getArray_typeAccess().getTypeParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Array_type__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group_3__0__Impl
	rule__Array_type__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getCommaKeyword_3_0()); }

	Comma 

{ after(grammarAccess.getArray_typeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array_type__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array_type__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array_type__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArray_typeAccess().getIndex_typeParserRuleCall_3_1()); }
	ruleindex_type
{ after(grammarAccess.getArray_typeAccess().getIndex_typeParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Dynamic_array_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dynamic_array_type__Group__0__Impl
	rule__Dynamic_array_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDynamic_array_typeAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
	RULE_ARRAY_KEYWORD
{ after(grammarAccess.getDynamic_array_typeAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamic_array_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dynamic_array_type__Group__1__Impl
	rule__Dynamic_array_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDynamic_array_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getDynamic_array_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Dynamic_array_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Dynamic_array_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dynamic_array_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDynamic_array_typeAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getDynamic_array_typeAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Record_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__0__Impl
	rule__Record_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getRECORD_KEYWORDTerminalRuleCall_0()); }
	RULE_RECORD_KEYWORD
{ after(grammarAccess.getRecord_typeAccess().getRECORD_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__1__Impl
	rule__Record_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getField_listParserRuleCall_1()); }
	rulefield_list
{ after(grammarAccess.getRecord_typeAccess().getField_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_typeAccess().getEND_KEYWORDTerminalRuleCall_2()); }
	RULE_END_KEYWORD
{ after(grammarAccess.getRecord_typeAccess().getEND_KEYWORDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Field_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group__0__Impl
	rule__Field_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getAlternatives_0()); }
(rule__Field_list__Alternatives_0)
{ after(grammarAccess.getField_listAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getSemicolonKeyword_1()); }
(
	Semicolon 
)?
{ after(grammarAccess.getField_listAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_list__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group_0_0__0__Impl
	rule__Field_list__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getFixed_partParserRuleCall_0_0_0()); }
	rulefixed_part
{ after(grammarAccess.getField_listAccess().getFixed_partParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_list__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getGroup_0_0_1()); }
(rule__Field_list__Group_0_0_1__0)?
{ after(grammarAccess.getField_listAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field_list__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group_0_0_1__0__Impl
	rule__Field_list__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getSemicolonKeyword_0_0_1_0()); }

	Semicolon 

{ after(grammarAccess.getField_listAccess().getSemicolonKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field_list__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field_list__Group_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getField_listAccess().getVariant_partParserRuleCall_0_0_1_1()); }
	rulevariant_part
{ after(grammarAccess.getField_listAccess().getVariant_partParserRuleCall_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fixed_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixed_part__Group__0__Impl
	rule__Fixed_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixed_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixed_partAccess().getRecord_sectionParserRuleCall_0()); }
	rulerecord_section
{ after(grammarAccess.getFixed_partAccess().getRecord_sectionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fixed_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixed_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixed_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixed_partAccess().getGroup_1()); }
(rule__Fixed_part__Group_1__0)*
{ after(grammarAccess.getFixed_partAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fixed_part__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixed_part__Group_1__0__Impl
	rule__Fixed_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixed_part__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixed_partAccess().getSemicolonKeyword_1_0()); }

	Semicolon 

{ after(grammarAccess.getFixed_partAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fixed_part__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixed_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixed_part__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixed_partAccess().getRecord_sectionParserRuleCall_1_1()); }
	rulerecord_section
{ after(grammarAccess.getFixed_partAccess().getRecord_sectionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Record_section__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_section__Group__0__Impl
	rule__Record_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_sectionAccess().getIdentifier_listParserRuleCall_0()); }
	ruleidentifier_list
{ after(grammarAccess.getRecord_sectionAccess().getIdentifier_listParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_section__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_section__Group__1__Impl
	rule__Record_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Record_section__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Record_section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecord_sectionAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getRecord_sectionAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variant_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__0__Impl
	rule__Variant_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getCASE_KEYWORDTerminalRuleCall_0()); }
	RULE_CASE_KEYWORD
{ after(grammarAccess.getVariant_partAccess().getCASE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__1__Impl
	rule__Variant_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getTag_fieldParserRuleCall_1()); }
	ruletag_field
{ after(grammarAccess.getVariant_partAccess().getTag_fieldParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__2__Impl
	rule__Variant_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getVariant_partAccess().getIDENTIFIERTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__3__Impl
	rule__Variant_part__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getOF_KEYWORDTerminalRuleCall_3()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getVariant_partAccess().getOF_KEYWORDTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__4__Impl
	rule__Variant_part__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getVariantParserRuleCall_4()); }
	rulevariant
{ after(grammarAccess.getVariant_partAccess().getVariantParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getGroup_5()); }
(rule__Variant_part__Group_5__0)*
{ after(grammarAccess.getVariant_partAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Variant_part__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group_5__0__Impl
	rule__Variant_part__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getSemicolonKeyword_5_0()); }

	Semicolon 

{ after(grammarAccess.getVariant_partAccess().getSemicolonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant_part__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant_part__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant_part__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariant_partAccess().getVariantParserRuleCall_5_1()); }
	rulevariant
{ after(grammarAccess.getVariant_partAccess().getVariantParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tag_field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag_field__Group__0__Impl
	rule__Tag_field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag_field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTag_fieldAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTag_fieldAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag_field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag_field__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag_field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTag_fieldAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getTag_fieldAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant__Group__0__Impl
	rule__Variant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getCase_label_listParserRuleCall_0()); }
	rulecase_label_list
{ after(grammarAccess.getVariantAccess().getCase_label_listParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant__Group__1__Impl
	rule__Variant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getVariantAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant__Group__2__Impl
	rule__Variant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_2()); }

	LeftParenthesis 

{ after(grammarAccess.getVariantAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant__Group__3__Impl
	rule__Variant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getField_listParserRuleCall_3()); }
	rulefield_list
{ after(grammarAccess.getVariantAccess().getField_listParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantAccess().getRightParenthesisKeyword_4()); }

	RightParenthesis 

{ after(grammarAccess.getVariantAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Set_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__0__Impl
	rule__Set_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getSET_KEYWORDTerminalRuleCall_0()); }
	RULE_SET_KEYWORD
{ after(grammarAccess.getSet_typeAccess().getSET_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__1__Impl
	rule__Set_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getSet_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSet_typeAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getSet_typeAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__File_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__File_type__Group__0__Impl
	rule__File_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__File_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFile_typeAccess().getFILE_KEYWORDTerminalRuleCall_0()); }
	RULE_FILE_KEYWORD
{ after(grammarAccess.getFile_typeAccess().getFILE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__File_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__File_type__Group__1__Impl
	rule__File_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__File_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFile_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getFile_typeAccess().getOF_KEYWORDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__File_type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__File_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__File_type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFile_typeAccess().getTypeParserRuleCall_2()); }
	ruletype
{ after(grammarAccess.getFile_typeAccess().getTypeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Pointer_type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer_type__Group__0__Impl
	rule__Pointer_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer_type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointer_typeAccess().getCircumflexAccentKeyword_0()); }

	CircumflexAccent 

{ after(grammarAccess.getPointer_typeAccess().getCircumflexAccentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pointer_type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pointer_type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointer_type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPointer_typeAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPointer_typeAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__0__Impl
	rule__Variable_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getVAR_KEYWORDTerminalRuleCall_0()); }
	RULE_VAR_KEYWORD
{ after(grammarAccess.getVariable_declaration_partAccess().getVAR_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__1__Impl
	rule__Variable_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getRecord_sectionParserRuleCall_1()); }
	rulerecord_section
{ after(grammarAccess.getVariable_declaration_partAccess().getRecord_sectionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__2__Impl
	rule__Variable_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }

	Semicolon 

{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
(rule__Variable_declaration_part__Group_3__0)*
{ after(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable_declaration_part__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group_3__0__Impl
	rule__Variable_declaration_part__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getRecord_sectionParserRuleCall_3_0()); }
	rulerecord_section
{ after(grammarAccess.getVariable_declaration_partAccess().getRecord_sectionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_declaration_part__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }

	Semicolon 

{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure_and_function_declaration_part__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_and_function_declaration_part__Group__0__Impl
	rule__Procedure_and_function_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); }
(rule__Procedure_and_function_declaration_part__Alternatives_0)
{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_and_function_declaration_part__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_and_function_declaration_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_and_function_declaration_part__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }

	Semicolon 

{ after(grammarAccess.getProcedure_and_function_declaration_partAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_declaration__Group__0__Impl
	rule__Procedure_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_declarationAccess().getProcedure_headingParserRuleCall_0()); }
	ruleprocedure_heading
{ after(grammarAccess.getProcedure_declarationAccess().getProcedure_headingParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_declaration__Group__1__Impl
	rule__Procedure_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); }

	Semicolon 

{ after(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_declarationAccess().getAlternatives_2()); }
(rule__Procedure_declaration__Alternatives_2)
{ after(grammarAccess.getProcedure_declarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Procedure_heading__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_heading__Group__0__Impl
	rule__Procedure_heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_headingAccess().getPROCEDURE_KEYWORDTerminalRuleCall_0()); }
	RULE_PROCEDURE_KEYWORD
{ after(grammarAccess.getProcedure_headingAccess().getPROCEDURE_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_heading__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_heading__Group__1__Impl
	rule__Procedure_heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getProcedure_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_heading__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure_heading__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedure_headingAccess().getFormal_parameter_listParserRuleCall_2()); }
(	ruleformal_parameter_list)?
{ after(grammarAccess.getProcedure_headingAccess().getFormal_parameter_listParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Formal_parameter_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group__0__Impl
	rule__Formal_parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }

	LeftParenthesis 

{ after(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group__1__Impl
	rule__Formal_parameter_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_1()); }
	ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group__2__Impl
	rule__Formal_parameter_list__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
(rule__Formal_parameter_list__Group_2__0)*
{ after(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Formal_parameter_list__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group_2__0__Impl
	rule__Formal_parameter_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }

	Semicolon 

{ after(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Formal_parameter_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_2_1()); }
	ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_listAccess().getFormal_parameter_sectionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value_parameter_section__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value_parameter_section__Group__0__Impl
	rule__Value_parameter_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValue_parameter_sectionAccess().getIdentifier_listParserRuleCall_0()); }
	ruleidentifier_list
{ after(grammarAccess.getValue_parameter_sectionAccess().getIdentifier_listParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value_parameter_section__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value_parameter_section__Group__1__Impl
	rule__Value_parameter_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); }

	Colon 

{ after(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value_parameter_section__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value_parameter_section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValue_parameter_sectionAccess().getParameter_typeParserRuleCall_2()); }
	ruleparameter_type
{ after(grammarAccess.getValue_parameter_sectionAccess().getParameter_typeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Packed_conformant_array_schema__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__0__Impl
	rule__Packed_conformant_array_schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getPACKED_KEYWORDTerminalRuleCall_0()); }
	RULE_PACKED_KEYWORD
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getPACKED_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__1__Impl
	rule__Packed_conformant_array_schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getARRAY_KEYWORDTerminalRuleCall_1()); }
	RULE_ARRAY_KEYWORD
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getARRAY_KEYWORDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__2__Impl
	rule__Packed_conformant_array_schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_2()); }

	LeftSquareBracket 

{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__3__Impl
	rule__Packed_conformant_array_schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_3()); }
	rulebound_specification
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__4__Impl
	rule__Packed_conformant_array_schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__5__Impl
	rule__Packed_conformant_array_schema__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getOF_KEYWORDTerminalRuleCall_5()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getOF_KEYWORDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Packed_conformant_array_schema__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Packed_conformant_array_schema__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Packed_conformant_array_schema__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPacked_conformant_array_schemaAccess().getIDENTIFIERTerminalRuleCall_6()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getPacked_conformant_array_schemaAccess().getIDENTIFIERTerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Bound_specification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound_specification__Group__0__Impl
	rule__Bound_specification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_specification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_specification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound_specification__Group__1__Impl
	rule__Bound_specification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_specification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBound_specificationAccess().getFullStopFullStopKeyword_1()); }

	FullStopFullStop 

{ after(grammarAccess.getBound_specificationAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_specification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound_specification__Group__2__Impl
	rule__Bound_specification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_specification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_2()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_specification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound_specification__Group__3__Impl
	rule__Bound_specification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_specification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBound_specificationAccess().getColonKeyword_3()); }

	Colon 

{ after(grammarAccess.getBound_specificationAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_specification__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bound_specification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_specification__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_4()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getBound_specificationAccess().getIDENTIFIERTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Unpacked_conformant_array_schema__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__0__Impl
	rule__Unpacked_conformant_array_schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
	RULE_ARRAY_KEYWORD
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getARRAY_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__1__Impl
	rule__Unpacked_conformant_array_schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_1()); }

	LeftSquareBracket 

{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__2__Impl
	rule__Unpacked_conformant_array_schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_2()); }
	rulebound_specification
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__3__Impl
	rule__Unpacked_conformant_array_schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup_3()); }
(rule__Unpacked_conformant_array_schema__Group_3__0)*
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__4__Impl
	rule__Unpacked_conformant_array_schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); }

	RightSquareBracket 

{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__5__Impl
	rule__Unpacked_conformant_array_schema__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getOF_KEYWORDTerminalRuleCall_5()); }
	RULE_OF_KEYWORD
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getOF_KEYWORDTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getAlternatives_6()); }
(rule__Unpacked_conformant_array_schema__Alternatives_6)
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Unpacked_conformant_array_schema__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group_3__0__Impl
	rule__Unpacked_conformant_array_schema__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getSemicolonKeyword_3_0()); }

	Semicolon 

{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getSemicolonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unpacked_conformant_array_schema__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unpacked_conformant_array_schema__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unpacked_conformant_array_schema__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_3_1()); }
	rulebound_specification
{ after(grammarAccess.getUnpacked_conformant_array_schemaAccess().getBound_specificationParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable_parameter_section__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_parameter_section__Group__0__Impl
	rule__Variable_parameter_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_parameter_sectionAccess().getVAR_KEYWORDTerminalRuleCall_0()); }
	RULE_VAR_KEYWORD
{ after(grammarAccess.getVariable_parameter_sectionAccess().getVAR_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_parameter_section__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_parameter_section__Group__1__Impl
	rule__Variable_parameter_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_parameter_sectionAccess().getIdentifier_listParserRuleCall_1()); }
	ruleidentifier_list
{ after(grammarAccess.getVariable_parameter_sectionAccess().getIdentifier_listParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_parameter_section__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_parameter_section__Group__2__Impl
	rule__Variable_parameter_section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); }

	Colon 

{ after(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_parameter_section__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable_parameter_section__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariable_parameter_sectionAccess().getParameter_typeParserRuleCall_3()); }
	ruleparameter_type
{ after(grammarAccess.getVariable_parameter_sectionAccess().getParameter_typeParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Function_heading__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_heading__Group__0__Impl
	rule__Function_heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_headingAccess().getFUNCTION_KEYWORDTerminalRuleCall_0()); }
	RULE_FUNCTION_KEYWORD
{ after(grammarAccess.getFunction_headingAccess().getFUNCTION_KEYWORDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_heading__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_heading__Group__1__Impl
	rule__Function_heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getFunction_headingAccess().getIDENTIFIERTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_heading__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_heading__Group__2__Impl
	rule__Function_heading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_headingAccess().getFormal_parameter_listParserRuleCall_2()); }
(	ruleformal_parameter_list)?
{ after(grammarAccess.getFunction_headingAccess().getFormal_parameter_listParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_heading__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_heading__Group__3__Impl
	rule__Function_heading__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); }

	Colon 

{ after(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_heading__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_heading__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_headingAccess().getIDENTIFIERTerminalRuleCall_4()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getFunction_headingAccess().getIDENTIFIERTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getFunction_headingParserRuleCall_0()); }
	rulefunction_heading
{ after(grammarAccess.getFunction_declarationAccess().getFunction_headingParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); }

	Semicolon 

{ after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunction_declarationAccess().getAlternatives_2()); }
(rule__Function_declaration__Alternatives_2)
{ after(grammarAccess.getFunction_declarationAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Pascal__ProgramAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
	ruleprogram{ after(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


