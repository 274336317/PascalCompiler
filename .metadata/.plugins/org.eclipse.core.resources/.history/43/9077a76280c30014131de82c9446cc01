package org.xtext.example.pascal.validation;

public class Type extends Element {

	private String realType;
	
	public Type(String name, boolean inherited, String realType) {
		super(name, ElementType.TYPE, inherited);
		this.realType = realType;
	}
	
	public Type(String name) {
		this(name, false, null);
	}
	
	public String getRealType() {
		return this.realType;
	}
	
	@Override
	public Element clone() {
		return new Type(this.name, this.inherited, this.realType);
	}

	@Override
	public String toString() {
		return this.name;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result
				+ ((realType == null) ? 0 : realType.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		Type other = (Type) obj;
		if (realType == null) {
			if (other.realType != null)
				return false;
		} else if (!realType.equals(other.realType))
			return false;
		return true;
	}
	
}
