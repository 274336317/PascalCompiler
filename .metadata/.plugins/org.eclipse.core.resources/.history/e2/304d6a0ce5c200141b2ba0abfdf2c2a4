/*
 * generated by Xtext
 */
package org.xtext.example.pascal.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import org.xtext.example.pascal.pascal.program
import org.xtext.example.pascal.validation.PascalValidator

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class PascalGenerator implements IGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		for(e: resource.allContents.toIterable.filter(program)) {
			fsa.generateFile(e.heading.name + ".asm", e.compile) 
		}
		PascalValidator.variables;
	}
	
	def compile(program e) '''
		  ; «e.heading.name»
	'''

	//override void doGenerate(Resource resource, IFileSystemAccess fsa) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))
	//}
}
