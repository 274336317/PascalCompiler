package org.xtext.example.pascal.validation;

public class ComposedType extends Type {

	private Type containedType;
	private ComposedTypeKind kind;
	
	public ComposedType(Type type, ComposedTypeKind kind) {
		super(type.name, type.inherited, type.getRealType());
		this.containedType = type;
		this.kind = kind;
	}

	public Type getContainedType() {
		return this.containedType;
	}
	
	public ComposedTypeKind getKind() {
		return this.kind;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Element other = (Element) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.toLowerCase().equals(other.name.toLowerCase()))
			return false;
		return true;
	}

}
