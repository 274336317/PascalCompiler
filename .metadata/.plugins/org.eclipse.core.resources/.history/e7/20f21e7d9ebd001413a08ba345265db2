/**
 * generated by Xtext
 */
package org.xtext.example.pascal.validation;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.validation.Check;
import org.xtext.example.pascal.pascal.block;
import org.xtext.example.pascal.validation.AbstractPascalValidator;
import org.xtext.example.pascal.validation.Variable;

/**
 * Custom validation rules.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
@SuppressWarnings("all")
public class PascalValidator extends AbstractPascalValidator {
  private Map<EObject, Set<Variable>> variables = new HashMap<EObject, Set<Variable>>();
  
  private Variable v;
  
  public Variable search(final Set<Variable> variables, final Variable key) {
    for (final Variable v : variables) {
      boolean _equals = v.equals(key);
      if (_equals) {
        return v;
      }
    }
    return null;
  }
  
  @Check
  public void checkVariableDeclaration(final block block) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method containsKey is undefined for the type PascalValidator"
      + "\n! cannot be resolved");
  }
}
